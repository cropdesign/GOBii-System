<?xml version="1.0" encoding="UTF-8"?>
<bean:beans
        xmlns:bean="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.springframework.org/schema/security"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- The creation of the beans to support security are in SecurityConfig.java. I put it there because we need to
    conditionally code the authentication manager based on authentication type. It is very possible to also do the
    http configuration there as well, which would eliminate the need for this namespace configuration altogether.
    However, this http configuration works, and I am unsure about how exactly to reproduce this in that code.
    Here are some useful posts:
    http://docs.spring.io/spring-security/site/migrate/current/3-to-4/html5/migrate-3-to-4-xml.html
    http://stackoverflow.com/questions/29349881/403-errors-after-upgrading-to-spring-security-4-0-0
    http://automateddeveloper.blogspot.co.uk/2014/03/securing-your-api-for-mobile-access.html
    http://automateddeveloper.blogspot.co.uk/2014/03/securing-your-mobile-api-spring-security.html
    -->

    <!--<http realm="Protected API"-->
          <!--auto-config="false"-->
          <!--use-expressions="true"-->
          <!--create-session="stateless"-->
          <!--entry-point-ref="unaAuthenticatedEntryPoint"-->
          <!--authentication-manager-ref="restAuthenticationManager">-->

        <!--&lt;!&ndash;This disabled cross-site forgery protection. If you don't do this, you can't accept ajax requests.&ndash;&gt;-->
        <!--<csrf disabled="true"/>-->

        <!--<custom-filter ref="restAuthenticationFilter" position="FORM_LOGIN_FILTER"/>-->
        <!--<intercept-url pattern="/gobii/v1/**" access="permitAll"/>-->
    <!--</http>-->


    <bean:bean id="unaAuthenticatedEntryPoint" class="org.gobiiproject.gobiiweb.security.UnAuthenticatedEntryPoint"/>


</bean:beans>